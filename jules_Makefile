# Compiler and flags
CC = gcc
CFLAGS = -Iinclude -Wall -Wextra -std=c99
LDFLAGS =

# Source and object directories
SRCDIR = src
OBJDIR = obj
INCLUDEDIR = include

# Find all .c files in the source directory
SOURCES = $(wildcard $(SRCDIR)/jules_*.c)
# Replace the .c extension with .o and put them in the object directory
OBJECTS = $(patsubst $(SRCDIR)/%.c,$(OBJDIR)/%.o,$(SOURCES))

# The final library will be a static library
LIB = libjules_template.a

# Test configuration
TESTSDIR = tests
TEST_SOURCES = $(wildcard $(TESTSDIR)/jules_*.c)
TEST_EXECUTABLE = jules_test_runner

# Phony targets do not represent files
.PHONY: all test clean

# Default target
all: $(LIB)

# Rule to create the static library
$(LIB): $(OBJECTS)
	ar rcs $@ $^

# Rule to compile source files into object files
# -c: compile, do not link
# -o $@: output to the target name
# $<: the first prerequisite (the .c file)
$(OBJDIR)/%.o: $(SRCDIR)/%.c
	@mkdir -p $(OBJDIR)
	$(CC) $(CFLAGS) -c $< -o $@

# Rule to build and run tests
test: $(TEST_EXECUTABLE)
	./$(TEST_EXECUTABLE)

# Rule to link the test executable
$(TEST_EXECUTABLE): $(OBJECTS) $(TEST_SOURCES)
	$(CC) $(CFLAGS) $^ -o $@ $(LDFLAGS)

# Rule to clean up the project
clean:
	rm -rf $(OBJDIR) $(LIB) $(TEST_EXECUTABLE)
